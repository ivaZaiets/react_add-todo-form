{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","getMaxId","posts","Math","max","post","App","useState","setTitle","titleError","setTitleError","titleGrammaticalError","setTitleGrammaticalError","selectedUser","setSelectedUser","selectedUserError","setSelectedUserError","setPosts","pattern","action","method","onSubmit","event","preventDefault","test","newPost","currentPost","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ae468da.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/user';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <>\n      <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n        {user?.name}\n      </a>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { Todos } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todos,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <>\n      <article\n        data-id={todo.id}\n        className={cn('TodoInfo', {\n          'TodoInfo--completed': todo.completed,\n        })}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {todo.title}\n        </h2>\n\n        <UserInfo user={todo.user} />\n      </article>\n    </>\n  );\n};\n","import { Todos } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todos[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      <section className=\"TodoList\">\n        {todos.map(todo => (\n          <TodoInfo todo={todo} key={todo.id} />\n        ))}\n      </section>\n    </>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './types/todo';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todos: Todos[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getMaxId(posts: Todos[]) {\n  const maxId = Math.max(\n    ...posts.map(post => post.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [titleGrammaticalError, setTitleGrammaticalError] = useState('');\n\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedUserError, setSelectedUserError] = useState(false);\n\n  const [posts, setPosts] = useState(todos);\n\n  const pattern = /^[a-zA-Zа-яА-ЯґҐєЄіІїЇ0-9\\s]*$/;\n\n  const reset = () => {\n    setTitle('');\n    setSelectedUser(0);\n\n    setTitleError(false);\n    setSelectedUserError(false);\n\n    setTitleGrammaticalError('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title && !selectedUser) {\n      setTitleError(true);\n      setSelectedUserError(true);\n\n      return;\n    }\n\n    if (!title) {\n      setTitleError(true);\n\n      return;\n    }\n\n    if (!pattern.test(title)) {\n      setTitleGrammaticalError(\n        'Please use only ua and en letters, digits, and spaces',\n      );\n\n      return;\n    }\n\n    if (!selectedUser) {\n      setSelectedUserError(true);\n\n      return;\n    }\n\n    const newPost: Todos = {\n      id: getMaxId(posts),\n      title,\n      completed: false,\n      userId: selectedUser,\n      user: getUserById(selectedUser),\n    };\n\n    setPosts(currentPost => [...currentPost, newPost]);\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(false);\n              setTitleGrammaticalError('');\n            }}\n          />\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n          {titleGrammaticalError && (\n            <span className=\"error\">\n              Please use only ua and en letters, digits, and spaces\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={(event) => {\n              setSelectedUser(+event.target.value);\n              setSelectedUserError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {selectedUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={posts} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}